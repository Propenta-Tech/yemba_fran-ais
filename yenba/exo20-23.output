Terminaux inutilisés dans la grammaire

    FONCTION
    RETOURNER


Grammaire

    0 $accept: programme $end

    1 programme: PROGRAMME liste_instructions FINPROGRAMME
    2          | liste_instructions

    3 liste_instructions: instruction
    4                   | liste_instructions instruction

    5 instruction: declaration ';'
    6            | affectation ';'
    7            | lecture ';'
    8            | affichage ';'
    9            | condition_si
   10            | boucle_tant_que
   11            | boucle_pour
   12            | boucle_repeter_jusqua
   13            | switch_case
   14            | bloc_instructions

   15 $@1: ε

   16 bloc_instructions: '{' $@1 liste_instructions '}'

   17 declaration: type_variable VARIABLE
   18            | type_variable VARIABLE AFFECTATION expression

   19 type_variable: TYPE_ENTIER
   20              | TYPE_REEL
   21              | TYPE_CHAINE

   22 affectation: VARIABLE AFFECTATION expression

   23 lecture: LIRE VARIABLE

   24 affichage: AFFICHER expression
   25          | AFFICHER CHAINE

   26 $@2: ε

   27 condition_si: SI condition ALORS $@2 liste_instructions sinon_optionnel FINSI

   28 sinon_optionnel: ε

   29 $@3: ε

   30 sinon_optionnel: SINON $@3 liste_instructions

   31 $@4: ε

   32 boucle_tant_que: TANT_QUE condition FAIRE $@4 liste_instructions FINTANTQUE

   33 $@5: ε

   34 boucle_pour: POUR VARIABLE A expression A expression FAIRE $@5 liste_instructions FINPOUR

   35 $@6: ε

   36 boucle_repeter_jusqua: REPETER_JUSQUA $@6 liste_instructions FIN_REPETER condition

   37 $@7: ε

   38 switch_case: SWITCH '(' expression ')' '{' $@7 liste_cases default_optionnel '}'

   39 liste_cases: case
   40            | liste_cases case

   41 $@8: ε

   42 case: CASE ENTIER ':' liste_instructions $@8 break_optionnel

   43 break_optionnel: ε
   44                | BREAK ';'

   45 default_optionnel: ε

   46 $@9: ε

   47 default_optionnel: DEFAULT ':' liste_instructions $@9 break_optionnel

   48 condition: expression EGAL expression
   49          | expression DIFFERENT expression
   50          | expression INFERIEUR expression
   51          | expression SUPERIEUR expression
   52          | expression INFERIEUR_EGAL expression
   53          | expression SUPERIEUR_EGAL expression
   54          | condition ET condition
   55          | condition OU condition
   56          | NON condition
   57          | '(' condition ')'

   58 expression: ENTIER
   59           | REEL
   60           | VARIABLE
   61           | expression PLUS expression
   62           | expression MOINS expression
   63           | expression MULT expression
   64           | expression DIV expression
   65           | expression MODULO expression
   66           | MOINS expression
   67           | '(' expression ')'


Terminaux, suivis des règles où ils apparaissent

    $end (0) 0
    '(' (40) 38 57 67
    ')' (41) 38 57 67
    ':' (58) 42 47
    ';' (59) 5 6 7 8 44
    '{' (123) 16 38
    '}' (125) 16 38
    error (256)
    ENTIER <entier> (258) 42 58
    REEL <reel> (259) 59
    CHAINE <chaine> (260) 25
    VARIABLE <chaine> (261) 17 18 22 23 34 60
    SI (262) 27
    ALORS (263) 27
    SINON (264) 30
    FINSI (265) 27
    TANT_QUE (266) 32
    FAIRE (267) 32 34
    FINTANTQUE (268) 32
    POUR (269) 34
    A (270) 34
    FINPOUR (271) 34
    LIRE (272) 23
    AFFICHER (273) 24 25
    TYPE_ENTIER (274) 19
    TYPE_REEL (275) 20
    TYPE_CHAINE (276) 21
    PROGRAMME (277) 1
    FINPROGRAMME (278) 1
    FONCTION (279)
    RETOURNER (280)
    REPETER_JUSQUA (281) 36
    FIN_REPETER (282) 36
    SWITCH (283) 38
    CASE (284) 42
    DEFAULT (285) 47
    BREAK (286) 44
    PLUS (287) 61
    MOINS (288) 62 66
    MULT (289) 63
    DIV (290) 64
    MODULO (291) 65
    AFFECTATION (292) 18 22
    EGAL (293) 48
    DIFFERENT (294) 49
    INFERIEUR (295) 50
    SUPERIEUR (296) 51
    INFERIEUR_EGAL (297) 52
    SUPERIEUR_EGAL (298) 53
    ET (299) 54
    OU (300) 55
    NON (301) 56


Non-terminaux, suivis des règles où ils apparaissent

    $accept (53)
        à gauche: 0
    programme (54)
        à gauche: 1 2
        à droite: 0
    liste_instructions (55)
        à gauche: 3 4
        à droite: 1 2 4 16 27 30 32 34 36 42 47
    instruction (56)
        à gauche: 5 6 7 8 9 10 11 12 13 14
        à droite: 3 4
    bloc_instructions (57)
        à gauche: 16
        à droite: 14
    $@1 (58)
        à gauche: 15
        à droite: 16
    declaration (59)
        à gauche: 17 18
        à droite: 5
    type_variable <chaine> (60)
        à gauche: 19 20 21
        à droite: 17 18
    affectation (61)
        à gauche: 22
        à droite: 6
    lecture (62)
        à gauche: 23
        à droite: 7
    affichage (63)
        à gauche: 24 25
        à droite: 8
    condition_si (64)
        à gauche: 27
        à droite: 9
    $@2 (65)
        à gauche: 26
        à droite: 27
    sinon_optionnel (66)
        à gauche: 28 30
        à droite: 27
    $@3 (67)
        à gauche: 29
        à droite: 30
    boucle_tant_que (68)
        à gauche: 32
        à droite: 10
    $@4 (69)
        à gauche: 31
        à droite: 32
    boucle_pour (70)
        à gauche: 34
        à droite: 11
    $@5 (71)
        à gauche: 33
        à droite: 34
    boucle_repeter_jusqua (72)
        à gauche: 36
        à droite: 12
    $@6 (73)
        à gauche: 35
        à droite: 36
    switch_case (74)
        à gauche: 38
        à droite: 13
    $@7 (75)
        à gauche: 37
        à droite: 38
    liste_cases (76)
        à gauche: 39 40
        à droite: 38 40
    case (77)
        à gauche: 42
        à droite: 39 40
    $@8 (78)
        à gauche: 41
        à droite: 42
    break_optionnel (79)
        à gauche: 43 44
        à droite: 42 47
    default_optionnel (80)
        à gauche: 45 47
        à droite: 38
    $@9 (81)
        à gauche: 46
        à droite: 47
    condition <chaine> (82)
        à gauche: 48 49 50 51 52 53 54 55 56 57
        à droite: 27 32 36 54 55 56 57
    expression <chaine> (83)
        à gauche: 58 59 60 61 62 63 64 65 66 67
        à droite: 18 22 24 34 38 48 49 50 51 52 53 61 62 63 64 65 66 67


État 0

    0 $accept: • programme $end

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    PROGRAMME       décalage et aller à l'état 10
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    programme              aller à l'état 14
    liste_instructions     aller à l'état 15
    instruction            aller à l'état 16
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 1

   22 affectation: VARIABLE • AFFECTATION expression

    AFFECTATION  décalage et aller à l'état 28


État 2

   27 condition_si: SI • condition ALORS $@2 liste_instructions sinon_optionnel FINSI

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    NON       décalage et aller à l'état 33
    '('       décalage et aller à l'état 34

    condition   aller à l'état 35
    expression  aller à l'état 36


État 3

   32 boucle_tant_que: TANT_QUE • condition FAIRE $@4 liste_instructions FINTANTQUE

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    NON       décalage et aller à l'état 33
    '('       décalage et aller à l'état 34

    condition   aller à l'état 37
    expression  aller à l'état 36


État 4

   34 boucle_pour: POUR • VARIABLE A expression A expression FAIRE $@5 liste_instructions FINPOUR

    VARIABLE  décalage et aller à l'état 38


État 5

   23 lecture: LIRE • VARIABLE

    VARIABLE  décalage et aller à l'état 39


État 6

   24 affichage: AFFICHER • expression
   25          | AFFICHER • CHAINE

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    CHAINE    décalage et aller à l'état 40
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 42


État 7

   19 type_variable: TYPE_ENTIER •

    $défaut  réduction par utilisation de la règle 19 (type_variable)


État 8

   20 type_variable: TYPE_REEL •

    $défaut  réduction par utilisation de la règle 20 (type_variable)


État 9

   21 type_variable: TYPE_CHAINE •

    $défaut  réduction par utilisation de la règle 21 (type_variable)


État 10

    1 programme: PROGRAMME • liste_instructions FINPROGRAMME

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    liste_instructions     aller à l'état 43
    instruction            aller à l'état 16
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 11

   36 boucle_repeter_jusqua: REPETER_JUSQUA • $@6 liste_instructions FIN_REPETER condition

    $défaut  réduction par utilisation de la règle 35 ($@6)

    $@6  aller à l'état 44


État 12

   38 switch_case: SWITCH • '(' expression ')' '{' $@7 liste_cases default_optionnel '}'

    '('  décalage et aller à l'état 45


État 13

   16 bloc_instructions: '{' • $@1 liste_instructions '}'

    $défaut  réduction par utilisation de la règle 15 ($@1)

    $@1  aller à l'état 46


État 14

    0 $accept: programme • $end

    $end  décalage et aller à l'état 47


État 15

    2 programme: liste_instructions •
    4 liste_instructions: liste_instructions • instruction

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 2 (programme)

    instruction            aller à l'état 48
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 16

    3 liste_instructions: instruction •

    $défaut  réduction par utilisation de la règle 3 (liste_instructions)


État 17

   14 instruction: bloc_instructions •

    $défaut  réduction par utilisation de la règle 14 (instruction)


État 18

    5 instruction: declaration • ';'

    ';'  décalage et aller à l'état 49


État 19

   17 declaration: type_variable • VARIABLE
   18            | type_variable • VARIABLE AFFECTATION expression

    VARIABLE  décalage et aller à l'état 50


État 20

    6 instruction: affectation • ';'

    ';'  décalage et aller à l'état 51


État 21

    7 instruction: lecture • ';'

    ';'  décalage et aller à l'état 52


État 22

    8 instruction: affichage • ';'

    ';'  décalage et aller à l'état 53


État 23

    9 instruction: condition_si •

    $défaut  réduction par utilisation de la règle 9 (instruction)


État 24

   10 instruction: boucle_tant_que •

    $défaut  réduction par utilisation de la règle 10 (instruction)


État 25

   11 instruction: boucle_pour •

    $défaut  réduction par utilisation de la règle 11 (instruction)


État 26

   12 instruction: boucle_repeter_jusqua •

    $défaut  réduction par utilisation de la règle 12 (instruction)


État 27

   13 instruction: switch_case •

    $défaut  réduction par utilisation de la règle 13 (instruction)


État 28

   22 affectation: VARIABLE AFFECTATION • expression

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 54


État 29

   58 expression: ENTIER •

    $défaut  réduction par utilisation de la règle 58 (expression)


État 30

   59 expression: REEL •

    $défaut  réduction par utilisation de la règle 59 (expression)


État 31

   60 expression: VARIABLE •

    $défaut  réduction par utilisation de la règle 60 (expression)


État 32

   66 expression: MOINS • expression

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 55


État 33

   56 condition: NON • condition

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    NON       décalage et aller à l'état 33
    '('       décalage et aller à l'état 34

    condition   aller à l'état 56
    expression  aller à l'état 36


État 34

   57 condition: '(' • condition ')'
   67 expression: '(' • expression ')'

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    NON       décalage et aller à l'état 33
    '('       décalage et aller à l'état 34

    condition   aller à l'état 57
    expression  aller à l'état 58


État 35

   27 condition_si: SI condition • ALORS $@2 liste_instructions sinon_optionnel FINSI
   54 condition: condition • ET condition
   55          | condition • OU condition

    ALORS  décalage et aller à l'état 59
    ET     décalage et aller à l'état 60
    OU     décalage et aller à l'état 61


État 36

   48 condition: expression • EGAL expression
   49          | expression • DIFFERENT expression
   50          | expression • INFERIEUR expression
   51          | expression • SUPERIEUR expression
   52          | expression • INFERIEUR_EGAL expression
   53          | expression • SUPERIEUR_EGAL expression
   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    PLUS            décalage et aller à l'état 62
    MOINS           décalage et aller à l'état 63
    MULT            décalage et aller à l'état 64
    DIV             décalage et aller à l'état 65
    MODULO          décalage et aller à l'état 66
    EGAL            décalage et aller à l'état 67
    DIFFERENT       décalage et aller à l'état 68
    INFERIEUR       décalage et aller à l'état 69
    SUPERIEUR       décalage et aller à l'état 70
    INFERIEUR_EGAL  décalage et aller à l'état 71
    SUPERIEUR_EGAL  décalage et aller à l'état 72


État 37

   32 boucle_tant_que: TANT_QUE condition • FAIRE $@4 liste_instructions FINTANTQUE
   54 condition: condition • ET condition
   55          | condition • OU condition

    FAIRE  décalage et aller à l'état 73
    ET     décalage et aller à l'état 60
    OU     décalage et aller à l'état 61


État 38

   34 boucle_pour: POUR VARIABLE • A expression A expression FAIRE $@5 liste_instructions FINPOUR

    A  décalage et aller à l'état 74


État 39

   23 lecture: LIRE VARIABLE •

    $défaut  réduction par utilisation de la règle 23 (lecture)


État 40

   25 affichage: AFFICHER CHAINE •

    $défaut  réduction par utilisation de la règle 25 (affichage)


État 41

   67 expression: '(' • expression ')'

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 75


État 42

   24 affichage: AFFICHER expression •
   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    PLUS    décalage et aller à l'état 62
    MOINS   décalage et aller à l'état 63
    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 24 (affichage)


État 43

    1 programme: PROGRAMME liste_instructions • FINPROGRAMME
    4 liste_instructions: liste_instructions • instruction

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    FINPROGRAMME    décalage et aller à l'état 76
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    instruction            aller à l'état 48
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 44

   36 boucle_repeter_jusqua: REPETER_JUSQUA $@6 • liste_instructions FIN_REPETER condition

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    liste_instructions     aller à l'état 77
    instruction            aller à l'état 16
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 45

   38 switch_case: SWITCH '(' • expression ')' '{' $@7 liste_cases default_optionnel '}'

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 78


État 46

   16 bloc_instructions: '{' $@1 • liste_instructions '}'

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    liste_instructions     aller à l'état 79
    instruction            aller à l'état 16
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 47

    0 $accept: programme $end •

    $défaut  accepter


État 48

    4 liste_instructions: liste_instructions instruction •

    $défaut  réduction par utilisation de la règle 4 (liste_instructions)


État 49

    5 instruction: declaration ';' •

    $défaut  réduction par utilisation de la règle 5 (instruction)


État 50

   17 declaration: type_variable VARIABLE •
   18            | type_variable VARIABLE • AFFECTATION expression

    AFFECTATION  décalage et aller à l'état 80

    $défaut  réduction par utilisation de la règle 17 (declaration)


État 51

    6 instruction: affectation ';' •

    $défaut  réduction par utilisation de la règle 6 (instruction)


État 52

    7 instruction: lecture ';' •

    $défaut  réduction par utilisation de la règle 7 (instruction)


État 53

    8 instruction: affichage ';' •

    $défaut  réduction par utilisation de la règle 8 (instruction)


État 54

   22 affectation: VARIABLE AFFECTATION expression •
   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    PLUS    décalage et aller à l'état 62
    MOINS   décalage et aller à l'état 63
    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 22 (affectation)


État 55

   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression
   66           | MOINS expression •

    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 66 (expression)


État 56

   54 condition: condition • ET condition
   55          | condition • OU condition
   56          | NON condition •

    $défaut  réduction par utilisation de la règle 56 (condition)


État 57

   54 condition: condition • ET condition
   55          | condition • OU condition
   57          | '(' condition • ')'

    ET   décalage et aller à l'état 60
    OU   décalage et aller à l'état 61
    ')'  décalage et aller à l'état 81


État 58

   48 condition: expression • EGAL expression
   49          | expression • DIFFERENT expression
   50          | expression • INFERIEUR expression
   51          | expression • SUPERIEUR expression
   52          | expression • INFERIEUR_EGAL expression
   53          | expression • SUPERIEUR_EGAL expression
   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression
   67           | '(' expression • ')'

    PLUS            décalage et aller à l'état 62
    MOINS           décalage et aller à l'état 63
    MULT            décalage et aller à l'état 64
    DIV             décalage et aller à l'état 65
    MODULO          décalage et aller à l'état 66
    EGAL            décalage et aller à l'état 67
    DIFFERENT       décalage et aller à l'état 68
    INFERIEUR       décalage et aller à l'état 69
    SUPERIEUR       décalage et aller à l'état 70
    INFERIEUR_EGAL  décalage et aller à l'état 71
    SUPERIEUR_EGAL  décalage et aller à l'état 72
    ')'             décalage et aller à l'état 82


État 59

   27 condition_si: SI condition ALORS • $@2 liste_instructions sinon_optionnel FINSI

    $défaut  réduction par utilisation de la règle 26 ($@2)

    $@2  aller à l'état 83


État 60

   54 condition: condition ET • condition

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    NON       décalage et aller à l'état 33
    '('       décalage et aller à l'état 34

    condition   aller à l'état 84
    expression  aller à l'état 36


État 61

   55 condition: condition OU • condition

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    NON       décalage et aller à l'état 33
    '('       décalage et aller à l'état 34

    condition   aller à l'état 85
    expression  aller à l'état 36


État 62

   61 expression: expression PLUS • expression

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 86


État 63

   62 expression: expression MOINS • expression

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 87


État 64

   63 expression: expression MULT • expression

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 88


État 65

   64 expression: expression DIV • expression

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 89


État 66

   65 expression: expression MODULO • expression

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 90


État 67

   48 condition: expression EGAL • expression

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 91


État 68

   49 condition: expression DIFFERENT • expression

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 92


État 69

   50 condition: expression INFERIEUR • expression

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 93


État 70

   51 condition: expression SUPERIEUR • expression

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 94


État 71

   52 condition: expression INFERIEUR_EGAL • expression

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 95


État 72

   53 condition: expression SUPERIEUR_EGAL • expression

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 96


État 73

   32 boucle_tant_que: TANT_QUE condition FAIRE • $@4 liste_instructions FINTANTQUE

    $défaut  réduction par utilisation de la règle 31 ($@4)

    $@4  aller à l'état 97


État 74

   34 boucle_pour: POUR VARIABLE A • expression A expression FAIRE $@5 liste_instructions FINPOUR

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 98


État 75

   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression
   67           | '(' expression • ')'

    PLUS    décalage et aller à l'état 62
    MOINS   décalage et aller à l'état 63
    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66
    ')'     décalage et aller à l'état 82


État 76

    1 programme: PROGRAMME liste_instructions FINPROGRAMME •

    $défaut  réduction par utilisation de la règle 1 (programme)


État 77

    4 liste_instructions: liste_instructions • instruction
   36 boucle_repeter_jusqua: REPETER_JUSQUA $@6 liste_instructions • FIN_REPETER condition

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    FIN_REPETER     décalage et aller à l'état 99
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    instruction            aller à l'état 48
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 78

   38 switch_case: SWITCH '(' expression • ')' '{' $@7 liste_cases default_optionnel '}'
   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    PLUS    décalage et aller à l'état 62
    MOINS   décalage et aller à l'état 63
    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66
    ')'     décalage et aller à l'état 100


État 79

    4 liste_instructions: liste_instructions • instruction
   16 bloc_instructions: '{' $@1 liste_instructions • '}'

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13
    '}'             décalage et aller à l'état 101

    instruction            aller à l'état 48
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 80

   18 declaration: type_variable VARIABLE AFFECTATION • expression

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 102


État 81

   57 condition: '(' condition ')' •

    $défaut  réduction par utilisation de la règle 57 (condition)


État 82

   67 expression: '(' expression ')' •

    $défaut  réduction par utilisation de la règle 67 (expression)


État 83

   27 condition_si: SI condition ALORS $@2 • liste_instructions sinon_optionnel FINSI

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    liste_instructions     aller à l'état 103
    instruction            aller à l'état 16
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 84

   54 condition: condition • ET condition
   54          | condition ET condition •
   55          | condition • OU condition

    $défaut  réduction par utilisation de la règle 54 (condition)


État 85

   54 condition: condition • ET condition
   55          | condition • OU condition
   55          | condition OU condition •

    ET  décalage et aller à l'état 60

    $défaut  réduction par utilisation de la règle 55 (condition)


État 86

   61 expression: expression • PLUS expression
   61           | expression PLUS expression •
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 61 (expression)


État 87

   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   62           | expression MOINS expression •
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 62 (expression)


État 88

   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   63           | expression MULT expression •
   64           | expression • DIV expression
   65           | expression • MODULO expression

    $défaut  réduction par utilisation de la règle 63 (expression)


État 89

   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   64           | expression DIV expression •
   65           | expression • MODULO expression

    $défaut  réduction par utilisation de la règle 64 (expression)


État 90

   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression
   65           | expression MODULO expression •

    $défaut  réduction par utilisation de la règle 65 (expression)


État 91

   48 condition: expression EGAL expression •
   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    PLUS    décalage et aller à l'état 62
    MOINS   décalage et aller à l'état 63
    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 48 (condition)


État 92

   49 condition: expression DIFFERENT expression •
   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    PLUS    décalage et aller à l'état 62
    MOINS   décalage et aller à l'état 63
    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 49 (condition)


État 93

   50 condition: expression INFERIEUR expression •
   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    PLUS    décalage et aller à l'état 62
    MOINS   décalage et aller à l'état 63
    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 50 (condition)


État 94

   51 condition: expression SUPERIEUR expression •
   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    PLUS    décalage et aller à l'état 62
    MOINS   décalage et aller à l'état 63
    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 51 (condition)


État 95

   52 condition: expression INFERIEUR_EGAL expression •
   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    PLUS    décalage et aller à l'état 62
    MOINS   décalage et aller à l'état 63
    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 52 (condition)


État 96

   53 condition: expression SUPERIEUR_EGAL expression •
   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    PLUS    décalage et aller à l'état 62
    MOINS   décalage et aller à l'état 63
    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 53 (condition)


État 97

   32 boucle_tant_que: TANT_QUE condition FAIRE $@4 • liste_instructions FINTANTQUE

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    liste_instructions     aller à l'état 104
    instruction            aller à l'état 16
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 98

   34 boucle_pour: POUR VARIABLE A expression • A expression FAIRE $@5 liste_instructions FINPOUR
   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    A       décalage et aller à l'état 105
    PLUS    décalage et aller à l'état 62
    MOINS   décalage et aller à l'état 63
    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66


État 99

   36 boucle_repeter_jusqua: REPETER_JUSQUA $@6 liste_instructions FIN_REPETER • condition

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    NON       décalage et aller à l'état 33
    '('       décalage et aller à l'état 34

    condition   aller à l'état 106
    expression  aller à l'état 36


État 100

   38 switch_case: SWITCH '(' expression ')' • '{' $@7 liste_cases default_optionnel '}'

    '{'  décalage et aller à l'état 107


État 101

   16 bloc_instructions: '{' $@1 liste_instructions '}' •

    $défaut  réduction par utilisation de la règle 16 (bloc_instructions)


État 102

   18 declaration: type_variable VARIABLE AFFECTATION expression •
   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    PLUS    décalage et aller à l'état 62
    MOINS   décalage et aller à l'état 63
    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 18 (declaration)


État 103

    4 liste_instructions: liste_instructions • instruction
   27 condition_si: SI condition ALORS $@2 liste_instructions • sinon_optionnel FINSI

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    SINON           décalage et aller à l'état 108
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 28 (sinon_optionnel)

    instruction            aller à l'état 48
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    sinon_optionnel        aller à l'état 109
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 104

    4 liste_instructions: liste_instructions • instruction
   32 boucle_tant_que: TANT_QUE condition FAIRE $@4 liste_instructions • FINTANTQUE

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    FINTANTQUE      décalage et aller à l'état 110
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    instruction            aller à l'état 48
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 105

   34 boucle_pour: POUR VARIABLE A expression A • expression FAIRE $@5 liste_instructions FINPOUR

    ENTIER    décalage et aller à l'état 29
    REEL      décalage et aller à l'état 30
    VARIABLE  décalage et aller à l'état 31
    MOINS     décalage et aller à l'état 32
    '('       décalage et aller à l'état 41

    expression  aller à l'état 111


État 106

   36 boucle_repeter_jusqua: REPETER_JUSQUA $@6 liste_instructions FIN_REPETER condition •
   54 condition: condition • ET condition
   55          | condition • OU condition

    ET  décalage et aller à l'état 60
    OU  décalage et aller à l'état 61

    $défaut  réduction par utilisation de la règle 36 (boucle_repeter_jusqua)


État 107

   38 switch_case: SWITCH '(' expression ')' '{' • $@7 liste_cases default_optionnel '}'

    $défaut  réduction par utilisation de la règle 37 ($@7)

    $@7  aller à l'état 112


État 108

   30 sinon_optionnel: SINON • $@3 liste_instructions

    $défaut  réduction par utilisation de la règle 29 ($@3)

    $@3  aller à l'état 113


État 109

   27 condition_si: SI condition ALORS $@2 liste_instructions sinon_optionnel • FINSI

    FINSI  décalage et aller à l'état 114


État 110

   32 boucle_tant_que: TANT_QUE condition FAIRE $@4 liste_instructions FINTANTQUE •

    $défaut  réduction par utilisation de la règle 32 (boucle_tant_que)


État 111

   34 boucle_pour: POUR VARIABLE A expression A expression • FAIRE $@5 liste_instructions FINPOUR
   61 expression: expression • PLUS expression
   62           | expression • MOINS expression
   63           | expression • MULT expression
   64           | expression • DIV expression
   65           | expression • MODULO expression

    FAIRE   décalage et aller à l'état 115
    PLUS    décalage et aller à l'état 62
    MOINS   décalage et aller à l'état 63
    MULT    décalage et aller à l'état 64
    DIV     décalage et aller à l'état 65
    MODULO  décalage et aller à l'état 66


État 112

   38 switch_case: SWITCH '(' expression ')' '{' $@7 • liste_cases default_optionnel '}'

    CASE  décalage et aller à l'état 116

    liste_cases  aller à l'état 117
    case         aller à l'état 118


État 113

   30 sinon_optionnel: SINON $@3 • liste_instructions

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    liste_instructions     aller à l'état 119
    instruction            aller à l'état 16
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 114

   27 condition_si: SI condition ALORS $@2 liste_instructions sinon_optionnel FINSI •

    $défaut  réduction par utilisation de la règle 27 (condition_si)


État 115

   34 boucle_pour: POUR VARIABLE A expression A expression FAIRE • $@5 liste_instructions FINPOUR

    $défaut  réduction par utilisation de la règle 33 ($@5)

    $@5  aller à l'état 120


État 116

   42 case: CASE • ENTIER ':' liste_instructions $@8 break_optionnel

    ENTIER  décalage et aller à l'état 121


État 117

   38 switch_case: SWITCH '(' expression ')' '{' $@7 liste_cases • default_optionnel '}'
   40 liste_cases: liste_cases • case

    CASE     décalage et aller à l'état 116
    DEFAULT  décalage et aller à l'état 122

    $défaut  réduction par utilisation de la règle 45 (default_optionnel)

    case               aller à l'état 123
    default_optionnel  aller à l'état 124


État 118

   39 liste_cases: case •

    $défaut  réduction par utilisation de la règle 39 (liste_cases)


État 119

    4 liste_instructions: liste_instructions • instruction
   30 sinon_optionnel: SINON $@3 liste_instructions •

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 30 (sinon_optionnel)

    instruction            aller à l'état 48
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 120

   34 boucle_pour: POUR VARIABLE A expression A expression FAIRE $@5 • liste_instructions FINPOUR

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    liste_instructions     aller à l'état 125
    instruction            aller à l'état 16
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 121

   42 case: CASE ENTIER • ':' liste_instructions $@8 break_optionnel

    ':'  décalage et aller à l'état 126


État 122

   47 default_optionnel: DEFAULT • ':' liste_instructions $@9 break_optionnel

    ':'  décalage et aller à l'état 127


État 123

   40 liste_cases: liste_cases case •

    $défaut  réduction par utilisation de la règle 40 (liste_cases)


État 124

   38 switch_case: SWITCH '(' expression ')' '{' $@7 liste_cases default_optionnel • '}'

    '}'  décalage et aller à l'état 128


État 125

    4 liste_instructions: liste_instructions • instruction
   34 boucle_pour: POUR VARIABLE A expression A expression FAIRE $@5 liste_instructions • FINPOUR

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    FINPOUR         décalage et aller à l'état 129
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    instruction            aller à l'état 48
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 126

   42 case: CASE ENTIER ':' • liste_instructions $@8 break_optionnel

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    liste_instructions     aller à l'état 130
    instruction            aller à l'état 16
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 127

   47 default_optionnel: DEFAULT ':' • liste_instructions $@9 break_optionnel

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    liste_instructions     aller à l'état 131
    instruction            aller à l'état 16
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27


État 128

   38 switch_case: SWITCH '(' expression ')' '{' $@7 liste_cases default_optionnel '}' •

    $défaut  réduction par utilisation de la règle 38 (switch_case)


État 129

   34 boucle_pour: POUR VARIABLE A expression A expression FAIRE $@5 liste_instructions FINPOUR •

    $défaut  réduction par utilisation de la règle 34 (boucle_pour)


État 130

    4 liste_instructions: liste_instructions • instruction
   42 case: CASE ENTIER ':' liste_instructions • $@8 break_optionnel

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 41 ($@8)

    instruction            aller à l'état 48
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27
    $@8                    aller à l'état 132


État 131

    4 liste_instructions: liste_instructions • instruction
   47 default_optionnel: DEFAULT ':' liste_instructions • $@9 break_optionnel

    VARIABLE        décalage et aller à l'état 1
    SI              décalage et aller à l'état 2
    TANT_QUE        décalage et aller à l'état 3
    POUR            décalage et aller à l'état 4
    LIRE            décalage et aller à l'état 5
    AFFICHER        décalage et aller à l'état 6
    TYPE_ENTIER     décalage et aller à l'état 7
    TYPE_REEL       décalage et aller à l'état 8
    TYPE_CHAINE     décalage et aller à l'état 9
    REPETER_JUSQUA  décalage et aller à l'état 11
    SWITCH          décalage et aller à l'état 12
    '{'             décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 46 ($@9)

    instruction            aller à l'état 48
    bloc_instructions      aller à l'état 17
    declaration            aller à l'état 18
    type_variable          aller à l'état 19
    affectation            aller à l'état 20
    lecture                aller à l'état 21
    affichage              aller à l'état 22
    condition_si           aller à l'état 23
    boucle_tant_que        aller à l'état 24
    boucle_pour            aller à l'état 25
    boucle_repeter_jusqua  aller à l'état 26
    switch_case            aller à l'état 27
    $@9                    aller à l'état 133


État 132

   42 case: CASE ENTIER ':' liste_instructions $@8 • break_optionnel

    BREAK  décalage et aller à l'état 134

    $défaut  réduction par utilisation de la règle 43 (break_optionnel)

    break_optionnel  aller à l'état 135


État 133

   47 default_optionnel: DEFAULT ':' liste_instructions $@9 • break_optionnel

    BREAK  décalage et aller à l'état 134

    $défaut  réduction par utilisation de la règle 43 (break_optionnel)

    break_optionnel  aller à l'état 136


État 134

   44 break_optionnel: BREAK • ';'

    ';'  décalage et aller à l'état 137


État 135

   42 case: CASE ENTIER ':' liste_instructions $@8 break_optionnel •

    $défaut  réduction par utilisation de la règle 42 (case)


État 136

   47 default_optionnel: DEFAULT ':' liste_instructions $@9 break_optionnel •

    $défaut  réduction par utilisation de la règle 47 (default_optionnel)


État 137

   44 break_optionnel: BREAK ';' •

    $défaut  réduction par utilisation de la règle 44 (break_optionnel)
